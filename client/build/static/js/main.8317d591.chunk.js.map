{"version":3,"sources":["hoc/Layout.js","components/UI/Separator.js","components/Sections/LeftSection/styles.js","components/Sections/LeftSection/CategoryItem.js","axios.js","queries/queries.js","components/NotifyErrors/InfoError.js","assets/icons/angry-driver.png","assets/icons/finish-flag.png","components/NotifyErrors/Error.js","store/application-data/actions.js","components/UI/StyledSkeleton.js","components/Sections/LeftSection/CategoryList.js","components/Sections/CenterSection/CategoryDetailsHeader/styles.js","utils/backgroundCases.js","components/Sections/CenterSection/CategoryDetailsHeader/CategoryDetailsHeader.js","components/Sections/CenterSection/GrandPrixList/styles.js","components/Sections/CenterSection/GrandPrixList/GrandPrixItem.js","components/Sections/CenterSection/GrandPrixList/GrandPrixList.js","components/UI/Tab.js","hooks/useSwitchPair.js","components/Sections/CenterSection/Standings/styles.js","utils/colorChooser.js","components/UI/DriverBox.js","components/UI/Figure.js","components/Sections/CenterSection/Standings/DriverStandings/DriverStandings.js","components/Sections/CenterSection/Standings/TeamStandings/TeamStandings.js","components/UI/Centerus.js","components/Sections/CenterSection/Standings/Standings.js","components/Sections/CenterSection/CategoryDetails/CategoryDetails.js","components/Sections/RightSection/styles.js","components/Sections/RightSection/Info/BasicGpInfo.js","utils/gridChooser.js","components/Sections/RightSection/Race/styles.js","components/Sections/RightSection/Race/EventResultList.js","utils/resultHeaderChooser.js","components/Sections/RightSection/Race/Race.js","components/Sections/RightSection/Info/Info.js","components/Sections/RightSection/GrandPrixDetails.js","utils/categoryEvents.js","hoc/AppContent.js","themes/themes.js","globalStyles.js","components/UI/Toggler.js","components/UI/Theme.js","hooks/useDarkMode.js","App.js","reportWebVitals.js","store/application-data/reducer.js","index.js"],"names":["RootContainer","styled","div","Wrapper","section","theme","background","Layout","children","Separator","secondaryColor","CategoryTitle","header","ListContainer","nav","StyledNavLink","NavLink","text","CategoryItem","name","id","imageUrl","to","replace","toLowerCase","src","alt","instance","axios","create","baseURL","delayed","interceptors","request","use","config","Promise","resolve","setTimeout","getCategories","a","get","data","getStandingsOfSeason","queryKey","currentID","getGrandPrixesOfSeason","currSesId","getRandomResults","ses_id","type","InfoError","icon","Error","AngryDriver","FinishDriver","STORE_CATEGORIES","STORE_SEASON_ID","STORE_GRANDPRIXES","store_seasonID","payload","StyledSkeleton","Skeleton","CategoryList","componentResult","history","useHistory","dispatch","useDispatch","useQuery","retry","staleTime","Infinity","error","isLoading","useEffect","store_categories","push","message","height","map","BackgroundContainer","backgroundCases","categoryName","SeasonArea","SeasonAreaNav","CategoryDetailsHeader","pickedCategory","seasons","tabsJSX","useState","seasonYear","setSeasonYear","length","end","DateTime","fromISO","year","seasonOptions","value","data-year","onChange","target","parseInt","options","selectedIndex","dataset","LinkGP","status","GrandPrixItem","additionalComment","begin","flagUrl","statusGP","match","useRouteMatch","customDate","day","monthShort","checkyear","local","url","GrandPrixList","route","useSelector","state","catData","currentSeasonId","store_grandPrixes","startRaceDay","endRaceDay","circuit","closedState","nation","Tab","mode","active","borderus","useSwitchPair","first","setFirst","second","setSecond","tabsHandler","option1","option2","onClick","NavContainer","ResultHeader","option","ResultItem","Team","Image","img","SpanDriver","SpanRest","colorChooser","team","Driver","DriverBox","lastName","firstName","teamName","nationImage","cutName","substr","Figure","color","DriverStandings","standings","positionCounter","renderDrivers","res","driver","faceImgUrl","wins","polePositions","podiums","points","TeamStandings","arrayOfTeams","forEach","some","x","cp","find","index","findIndex","splice","logo","renderTeamStandings","Centerus","Standings","tab","CircularProgress","CategoryDetails","catId","useParams","setPickedCategory","categories","findedCategory","cat","NavigationBox","NavigationHeader","HeaderSpan","span","InfoContainer","CircuitImage","BasicGpInfo","gpData","gridChooser","types","catType","evType","charAt","Selector","select","body","evCombination","EventResultList","result","setResult","loading","setLoading","getRandomData","fetchResult","renderHeaders","resultHeaderChooser","pointsArray","el","laps","statusRace","grid","pits","time","Race","renderOptions","events","nameCategory","pickedEvent","setPickedEvent","customData","date","monthLong","toFormat","data-eventtype","eventtype","Info","details","renderSchedule","circuitImageUrl","circuitLength","raceDistance","GrandPrixDetails","gpId","catName","setGpData","setEvents","allGps","grandPrixesOfSeason","findedGp","gp","categoryEvents","AppContent","path","lightTheme","hoverColor","darkTheme","GlobalStyles","createGlobalStyle","Toggle","toggleTheme","Switch","checked","inputProps","Theme","setTheme","mountedComponent","setMountedComponent","setMode","window","localStorage","setItem","localTheme","getItem","useDarkMode","themeToggler","themeMode","queryClient","QueryClient","App","QueryClientProvider","client","initialIsOpen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8317d591.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst RootContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  min-height: 101vh;\r\n`;\r\n\r\nconst Wrapper = styled.section`\r\n  padding: 10px;\r\n  flex-basis: 1500px;\r\n  border-radius: 5px;\r\n  background-color: ${({ theme }) => theme.background};\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-auto-rows: 1fr;\r\n  @media (min-width: 1000px) {\r\n    grid-template-columns: 1fr auto 2fr auto 2fr;\r\n  }\r\n`;\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <RootContainer>\r\n      <Wrapper>{children}</Wrapper>\r\n    </RootContainer>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import styled from 'styled-components';\n\nexport const Separator = styled.div`\n  display: none;\n  width: 1px;\n  background-color: ${({ theme }) => theme.secondaryColor};\n  margin: 0 10px;\n  @media (min-width: 1000px) {\n    display: block;\n  }\n`;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const CategoryTitle = styled.header`\n  padding: 5px 20px;\n  background-color: ${({ theme }) => theme.secondaryColor};\n  height: max-content;\n  text-transform: uppercase;\n  border-radius: 5px;\n  & > h1 {\n    font-size: 1.1rem;\n  }\n`;\n\nexport const ListContainer = styled.nav`\n  margin-top: 10px;\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  height: 50px;\n  border-bottom: 1px solid ${({ theme }) => theme.secondaryColor};\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.background};\n  color: ${({ theme }) => theme.text};\n  border-radius: 2px;\n  & > img {\n    width: 35px;\n    margin: 0 15px;\n  }\n  & > p {\n    font-size: 1.1rem;\n  }\n  &.active {\n    background-color: ${({ theme }) => theme.secondaryColor};\n    border-bottom: 1px solid transparent;\n  }\n  &:hover,\n  &.active:hover {\n    background-color: ${({ theme }) => theme.secondaryColor};\n  }\n`;\n","import { StyledNavLink } from './styles';\n\nconst CategoryItem = ({ name, id, imageUrl }) => {\n  return (\n    <StyledNavLink\n      to={`/category/${name.replace(' ', '-').toLowerCase()}/${id}`}\n    >\n      <img src={imageUrl} alt=\"Category Item\" />\n      <p>{name}</p>\n    </StyledNavLink>\n  );\n};\n\nexport default CategoryItem;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'http://localhost:5000/api',\n  delayed: true,\n});\n\ninstance.interceptors.request.use((config) => {\n  if (config.delayed) {\n    return new Promise((resolve) => setTimeout(() => resolve(config), 1500));\n  }\n  return config;\n});\n\nexport default instance;\n","import axios from '../axios';\n\nconst getCategories = async () => {\n  const { data } = await axios.get('/category');\n  return data;\n};\nconst getStandingsOfSeason = async ({ queryKey: [_key, currentID] }) => {\n  if (currentID) {\n    const { data } = await axios.get(`/standings/${currentID}`);\n    return data;\n  }\n};\nconst getGrandPrixesOfSeason = async ({ queryKey: [_key, currSesId] }) => {\n  if (currSesId) {\n    const { data } = await axios.get(`/season/${currSesId}`);\n    return data;\n  }\n};\nconst getRandomResults = async (ses_id) => {\n  if (ses_id) {\n    const { data } = await axios.get(`/results/${ses_id}`);\n    return data;\n  }\n};\nexport {\n  getCategories,\n  getGrandPrixesOfSeason,\n  getStandingsOfSeason,\n  getRandomResults,\n};\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  grid-column: ${({ type }) => (type === 'network-error' ? '1/6' : 'auto')};\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  & > img {\r\n    width: 150px;\r\n  }\r\n  & > p {\r\n    font-weight: bold;\r\n    font-size: 1em;\r\n    text-shadow: 1px 2px 10px hsla(0, 2%, 64%, 0.4);\r\n    text-align: center;\r\n  }\r\n  @media (min-width: 600px) {\r\n    padding: 0 50px;\r\n    & > p {\r\n      font-size: 1.5em;\r\n    }\r\n    & > img {\r\n      width: 155px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst InfoError = ({ icon, text, type }) => {\r\n  return (\r\n    <Wrapper type={type}>\r\n      <img src={icon} alt=\"Icon\" />\r\n      <p>{text}</p>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default InfoError;\r\n","export default __webpack_public_path__ + \"static/media/angry-driver.6bd470e5.png\";","export default __webpack_public_path__ + \"static/media/finish-flag.3deaf89a.png\";","import React from 'react';\nimport InfoError from './InfoError';\nimport AngryDriver from '../../assets/icons/angry-driver.png';\nimport FinishDriver from '../../assets/icons/finish-flag.png';\n\nconst Error = ({ type }) => {\n  switch (type) {\n    case 'network-error':\n      return (\n        <InfoError\n          icon={AngryDriver}\n          text=\"Network Error - make sure API is running\"\n          type={type}\n        />\n      );\n    case 'no-results':\n      return <InfoError icon={FinishDriver} text=\"No results\" type={type} />;\n    default:\n      return null;\n  }\n};\n\nexport default Error;\n","export const STORE_CATEGORIES = 'STORECATEGORIES';\nexport const STORE_SEASON_ID = 'STORESEASONID';\nexport const STORE_GRANDPRIXES = 'STOREGRANDPRIXES';\n\nfunction store_categories(data) {\n  return {\n    type: STORE_CATEGORIES,\n    payload: {\n      data,\n    },\n  };\n}\nfunction store_seasonID(id) {\n  return {\n    type: STORE_SEASON_ID,\n    payload: {\n      id,\n    },\n  };\n}\nfunction store_grandPrixes(data) {\n  return {\n    type: STORE_GRANDPRIXES,\n    payload: {\n      data,\n    },\n  };\n}\nexport { store_categories, store_seasonID, store_grandPrixes };\n","import { Skeleton } from '@material-ui/lab';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledSkeleton = styled(Skeleton)`\r\n  && {background-color: ${({theme})=>theme.secondaryColor};\r\n`\r\n","import { CategoryTitle, ListContainer } from './styles';\r\nimport CategoryItem from './CategoryItem';\r\nimport { useQuery } from 'react-query';\r\nimport { getCategories } from '../../../queries/queries';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Error from '../../NotifyErrors/Error';\r\nimport { store_categories } from '../../../store/application-data/actions';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { StyledSkeleton } from '../../UI/StyledSkeleton';\r\n\r\nconst CategoryList = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const { data, error, isLoading } = useQuery('getCategories', getCategories, {\r\n    retry: 0,\r\n    staleTime: Infinity,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      const { name, id } = data[0];\r\n      dispatch(store_categories(data));\r\n      history.push(`/category/${name.replace(' ', '-').toLowerCase()}/${id}`);\r\n    }\r\n  }, [dispatch, data, history]);\r\n\r\n  let componentResult;\r\n  if (error) {\r\n    if (error.message === 'Network Error') {\r\n      history.push('/net-error');\r\n    }\r\n    componentResult = <Error type=\"no-results\" />;\r\n  }\r\n\r\n  if (isLoading)\r\n    componentResult = (\r\n      <>\r\n        <StyledSkeleton height={30}/>\r\n        <StyledSkeleton height={30}/>\r\n        <StyledSkeleton height={30}/>\r\n        <StyledSkeleton height={30}/>\r\n      </>\r\n    );\r\n\r\n  if (data) {\r\n    componentResult = data.map(({ id, name, imageUrl }) => {\r\n      return <CategoryItem key={id} name={name} id={id} imageUrl={imageUrl} />;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <CategoryTitle>\r\n        <h1>Categories</h1>\r\n      </CategoryTitle>\r\n      <ListContainer>{componentResult}</ListContainer>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CategoryList;\r\n","import styled from 'styled-components';\r\nimport { backgroundCases } from '../../../../utils/backgroundCases';\r\n\r\nexport const BackgroundContainer = styled.section`\r\n  color: white;\r\n  position: relative;\r\n  height: 200px;\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 5px;\r\n    box-shadow: 1px 1px 5px hsla(0, 1%, 59%, 0.3);\r\n    background-size: cover;\r\n    background-position: center;\r\n    filter: brightness(50%);\r\n    background-image: url(${({ categoryName }) =>\r\n      backgroundCases(categoryName)});\r\n    transition: background-image .5s ease-out;\r\n  }\r\n  & > section {\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    height: 100%;\r\n  }\r\n`;\r\nexport const SeasonArea = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 20px 25px;\r\n  & > p {\r\n    font-size: 1.5em;\r\n    font-weight: 600;\r\n  }\r\n  & > select {\r\n    outline: none;\r\n    border: 1px solid white;\r\n    border-radius: 3px;\r\n    font-size: 1.2em;\r\n    margin-left: 20px;\r\n    width: 80px;\r\n    height: 30px;\r\n    color: white;\r\n    background-color: transparent;\r\n  }\r\n  & option {\r\n    margin: 20px;\r\n    text-align: center;\r\n    color: white;\r\n    background-color: black;\r\n  }\r\n`;\r\n\r\nexport const SeasonAreaNav = styled.nav`\r\n  display: flex;\r\n  height: 40px;\r\n`;\r\n","export function backgroundCases(type) {\r\n  switch (type) {\r\n    case 'Formula 1':\r\n      return 'https://i.inews.co.uk/content/uploads/2020/09/PRI_163610936.jpg';\r\n    case 'WRC':\r\n      return 'https://images.unsplash.com/photo-1548504240-3dd72f99dc72?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80';\r\n    case 'Formula E':\r\n      return 'https://assets-prd.formulae.cloud/-/media/images/news/2020/september/formula-e-grid-shot-start.jpg?modified=20200924095253&cx=0.5&cy=0.8&cw=1440&ch=707&hash=A789C5D311486689FF8C7780CA9E3249';\r\n    case 'Formula 2':\r\n      return 'https://www.cyrkf1.pl/wp-content/uploads/2020/06/2019-F2-start.jpg';\r\n    default:\r\n      return 'https://images.unsplash.com/photo-1607957496280-7162aa648931?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80';\r\n  }\r\n}\r\n","import { useEffect, useState } from 'react';\nimport { BackgroundContainer, SeasonArea, SeasonAreaNav } from './styles';\nimport { DateTime } from 'luxon';\nimport { useDispatch } from 'react-redux';\nimport { store_seasonID } from '../../../../store/application-data/actions';\n\nconst CategoryDetailsHeader = ({\n  pickedCategory: { seasons, name },\n  tabsJSX,\n}) => {\n  const [seasonYear, setSeasonYear] = useState(null);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (seasons.length > 0) {\n      const { id, end } = seasons[0];\n      dispatch(store_seasonID(id));\n      setSeasonYear(DateTime.fromISO(end).year);\n    }\n  }, [dispatch, seasons]);\n\n  function pickSeasonHandler({ target }) {\n    dispatch(store_seasonID(parseInt(target.value)));\n    let year = target.options[target.selectedIndex].dataset.year;\n    setSeasonYear(year);\n  }\n\n  const seasonOptions = seasons.map(({ id, end }) => {\n    const year = DateTime.fromISO(end).year;\n    return (\n      <option value={id} key={id} data-year={year}>\n        {year}\n      </option>\n    );\n  });\n\n  return (\n    <BackgroundContainer categoryName={name}>\n      <section>\n        <SeasonArea>\n          <p>{name}</p>\n          {seasons.length > 0 && (\n            <select onChange={pickSeasonHandler}>{seasonOptions}</select>\n          )}\n        </SeasonArea>\n        <SeasonAreaNav>\n          {tabsJSX('Races', 'Standings', 'primary', seasonYear)}\n        </SeasonAreaNav>\n      </section>\n    </BackgroundContainer>\n  );\n};\n\nexport default CategoryDetailsHeader;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const LinkGP = styled(NavLink)`\n  display: grid;\n  grid-template-columns: 70px 2fr 1fr;\n  grid-template-rows: 2fr 1fr;\n  align-items: center;\n  border-bottom: 1px solid ${({ theme }) => theme.secondaryColor};\n  text-decoration: none;\n  color: ${({ status, theme }) => (status ? theme.text : 'grey')};\n  transition: background-color 0.2s ease-out;\n  padding: 5px 0;\n  &:last-child {\n    border-bottom: 1px solid transparent;\n  }\n  &.active {\n    background-color: ${({ theme }) => theme.secondaryColor};\n  }\n  &:hover {\n    background-color: ${({ theme }) => theme.secondaryColor};\n  }\n  & > img {\n    justify-self: center;\n    width: 30px;\n    grid-column: 1/2;\n    grid-row: 1/2;\n  }\n  & > p {\n    font-size: 1.3em;\n    text-transform: uppercase;\n  }\n  & > span {\n    padding: 5px 0;\n    font-size: 0.7em;\n    grid-column: 2/3;\n    grid-row: 2/3;\n  }\n  & > strong {\n    align-self: self-start;\n    font-size: 0.9em;\n    padding: 15px 0;\n    font-weight: 300;\n    color: red;\n    grid-column: 3/4;\n    grid-row: 1/3;\n  }\n  & > span span {\n    margin-left: 5px;\n  }\n`;\n","import { DateTime } from 'luxon';\nimport { useRouteMatch } from 'react-router-dom';\nimport { LinkGP } from './styles';\n\nconst GrandPrixItem = ({ name, begin, end, id, flagUrl, statusGP }) => {\n  const match = useRouteMatch();\n  const customDate = `${DateTime.fromISO(begin).day} - ${\n    DateTime.fromISO(end).day\n  } ${DateTime.fromISO(end).monthShort}`;\n  const checkyear = DateTime.fromISO(end).year < DateTime.local().year;\n  let additionalComment;\n  if(checkyear && statusGP){\n    additionalComment = null\n  } else if(!checkyear) {\n    additionalComment = null;\n  } else if(!statusGP && !checkyear){\n    additionalComment = null;\n  } else {\n    additionalComment = 'Canceled'\n  }\n  return (\n    <LinkGP to={`${match.url}/gp/${id}`} status={statusGP ? 1 : 0}>\n      <img src={flagUrl} alt=\"GP Item\" />\n      <p>{name}</p>\n      <span>\n        ⚫ <span>{customDate}</span>\n      </span>\n      <strong>{additionalComment}</strong>\n    </LinkGP>\n  );\n};\n\nexport default GrandPrixItem;\n","import { useQuery } from 'react-query';\nimport { getGrandPrixesOfSeason } from '../../../../queries/queries';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Error from '../../../NotifyErrors/Error';\nimport GrandPrixItem from './GrandPrixItem';\nimport { useEffect } from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { store_grandPrixes } from '../../../../store/application-data/actions';\nimport { StyledSkeleton } from '../../../UI/StyledSkeleton';\n\nconst GrandPrixList = () => {\n  const history = useHistory();\n  const route = useRouteMatch();\n  const dispatch = useDispatch();\n  const currSesId = useSelector((state) => state.catData.currentSeasonId);\n  const { data, error, isLoading } = useQuery(\n    ['getGps', currSesId],\n    getGrandPrixesOfSeason,\n    {\n      retry: 1,\n      staleTime: Infinity,\n    }\n  );\n\n  useEffect(() => {\n    if (data) {\n      const { id } = data[0];\n      history.push(`${route.url}/gp/${id}`);\n      dispatch(store_grandPrixes(data));\n    }\n  }, [data, dispatch, history, route.url]);\n\n  let componentResult;\n  if (isLoading)\n    componentResult = (\n      <>\n        <StyledSkeleton height={50}/>\n        <StyledSkeleton height={50}/>\n        <StyledSkeleton height={50}/>\n        <StyledSkeleton height={50}/>\n      </>\n    );\n  if (error) {\n    componentResult = <Error type=\"no-results\" />;\n  }\n  if (data) {\n    componentResult = data.map(\n      ({ name, id, startRaceDay, endRaceDay, circuit, closedState }) => {\n        return (\n          <GrandPrixItem\n            key={id}\n            id={id}\n            name={name}\n            begin={startRaceDay}\n            end={endRaceDay}\n            flagUrl={circuit.nation.imageUrl}\n            statusGP={closedState}\n          />\n        );\n      }\n    );\n  }\n  return <div>{componentResult}</div>;\n};\n\nexport default GrandPrixList;\n","import styled from 'styled-components';\n\nexport const Tab = styled.div`\n  user-select: none;\n  font-size: 1.1em;\n  cursor: pointer;\n  padding: 5px 10px;\n  font-weight: 600;\n  color: ${({ theme, mode, active }) => {\n    if (active && mode === 'primary') {\n      return 'hsl(0,0%,100%)';\n    } else if (active && mode === 'secondary') {\n      return theme.borderus;\n    }\n    return 'hsl(0,1%,80%)';\n  }};\n  border-bottom: 3px solid\n    ${({ theme, mode, active }) => {\n      if (active && mode === 'primary') {\n        return 'white';\n      } else if (active && mode === 'secondary') {\n        return theme.borderus;\n      }\n      return 'transparent';\n    }};\n`;\n","import { useState } from 'react';\nimport { Tab } from '../components/UI/Tab';\n\nexport const useSwitchPair = () => {\n  const [first, setFirst] = useState(true);\n  const [second, setSecond] = useState(false);\n\n  function tabsHandler() {\n    if (setFirst && second === false) {\n      setFirst(false);\n      setSecond(true);\n    } else {\n      setSecond(false);\n      setFirst(true);\n    }\n  }\n\n  const tabs = (option1, option2, mode, year) => {\n    return (\n      <>\n        <Tab onClick={tabsHandler} mode={mode} active={first}>\n          {option1}\n        </Tab>\n        <Tab onClick={tabsHandler} mode={mode} active={!first}>\n          {option2 === 'Standings' ? `${option2} ${year}` : `${option2}`}\n        </Tab>\n      </>\n    );\n  };\n  return [first, tabs];\n};\n","import styled from 'styled-components';\n\nexport const NavContainer = styled.nav`\n  display: flex;\n  padding: 10px 0 0 0;\n  background: ${({ theme }) => theme.secondaryColor};\n  height: 50px;\n`;\n\nexport const ResultHeader = styled.div`\n  margin-top: 20px;\n  display: grid;\n  grid-gap: 10px;\n  grid-template-columns: ${({ option }) => {\n    if (option === 'Drivers') {\n      return '20px 20px 20px 3fr auto';\n    }\n    return '20px auto auto 1fr';\n  }};\n  grid-template-rows: minmax(30px, 1fr);\n  align-items: center;\n  color: grey;\n  font-size: 0.8em;\n  font-weight: bold;\n`;\nexport const ResultItem = styled.div`\n  font-size: 13px;\n  display: grid;\n  grid-gap: 10px;\n  grid-template-columns: ${({ option }) => {\n    if (option === 'Drivers') {\n      return 'auto auto 1fr 3fr repeat(4, 1fr)';\n    }\n    return 'auto auto 3fr 1fr';\n  }};\n  align-items: center;\n  grid-template-rows: minmax(30px, 1fr);\n  padding: 5px 5px;\n  border-bottom: 1px solid ${({ theme }) => theme.secondaryColor};\n  & > strong {\n    justify-self: self-end;\n    font-size: 1.1em;\n  }\n`;\n\nexport const Team = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-self: self-start;\n  align-items: center;\n  & div:first-child {\n    display: flex;\n    align-items: center;\n  }\n  & span {\n    font-size: 1.2em;\n  }\n  & img {\n    width: 45px;\n    margin: 10px;\n  }\n`;\nexport const Image = styled.img`\n  width: 45px;\n  margin: 5px;\n`;\n\nexport const SpanDriver = styled.div`\n  justify-self: self-start;\n  grid-column: 3/4;\n`;\nexport const SpanRest = styled.div`\n  justify-self: self-end;\n`;\n","export function colorChooser(team) {\n  switch (team) {\n    case 'Mercedes':\n    case 'NIO':\n      return '#00D2BE';\n    case 'Ferrari':\n    case 'PREMA Racing':\n      return 'red';\n    case 'Aston Martin':\n      return '#0fc81f';\n    case 'Alpine':\n      return '#08B5F7';\n    case 'Red Bull Racing':\n    case 'Carlin':\n      return '#021ef6';\n    case 'Campos Racing':\n    case 'McLaren':\n    case 'Jaguar Racing':\n      return '#FF8700';\n    case 'Renault':\n      return '#F1E931';\n    case 'Force India':\n    case 'BWT Arden':\n    case 'Racing Point':\n      return '#F596C8';\n    case 'Alpha Tauri':\n      return '#f1f5f4';\n    case 'Williams':\n      return '#addae0';\n    case 'Haas F1 Team':\n    case 'HWA Team':\n      return '#828282';\n    case 'Sauber':\n    case 'Alfa Romeo':\n    case 'Venturi':\n      return '#AC5050';\n    case 'Toro Rosso':\n    case 'Audi Sport ABT Schaeffler':\n      return '#446df5';\n    case 'Manor':\n      return '#52B030';\n    case 'Lotus':\n    case 'Andretti Autosport':\n      return '#74701c';\n    case 'Marussia':\n    case 'Envision Virgin Racing':\n      return '#4b2121';\n    case 'Caterham':\n      return 'green';\n    case 'HRT':\n      return '#6a4e4e';\n    case 'Toyota Gazoo Racing WRT':\n      return '#8ce5f8';\n    case 'Hyundai Shell Mobis WRT':\n      return '#a09c9c';\n    case 'M-Sport Ford WRT':\n      return '#306fd2';\n    case 'Citroën Total World Rally Team':\n      return '#e33434';\n    case 'DAMS':\n      return '#890A0A';\n    case 'Uni-Virtuosi Racing':\n    case 'DS Techeetah':\n      return '#735E0E';\n    case 'ART Grand Prix':\n    case 'Dragon Racing':\n      return '#70737B';\n    case 'Charouz Racing System':\n      return '#969899';\n    case 'MP Motorsport':\n    case 'Mahindra Racing':\n      return '#252435';\n    case 'Hitech Grand Prix':\n      return '#99B1D4';\n    default:\n      return 'black';\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport const Driver = styled.div`\n  display: flex;\n  justify-self: flex-start;\n  & > div {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: repeat(2, 1fr);\n    align-items: center;\n  }\n\n  & > div > div {\n    display: flex;\n    align-items: center;\n  }\n\n  & > div > span {\n    color: gray;\n    font-size: 13px;\n  }\n  & img {\n    width: 15px;\n    margin: 5px;\n  }\n`;\n\nconst DriverBox = ({ lastName, firstName, teamName, nationImage }) => {\n  const cutName = firstName.substr(0, 1);\n  return (\n    <Driver>\n      <div>\n        <div>\n          <img src={nationImage} alt=\"Flag\" />\n          <span>\n            {lastName} {cutName}.\n          </span>\n        </div>\n        <span>{teamName}</span>\n      </div>\n    </Driver>\n  );\n};\n\nexport default DriverBox;\n","import styled from 'styled-components';\n\nexport const Figure = styled.div`\n  border-right: 15px solid transparent;\n  width: 25px;\n  border-top: 35px solid ${({ color }) => color};\n  position: relative;\n`;\n","import {\n  Image,\n  ResultHeader,\n  ResultItem,\n  SpanDriver,\n  SpanRest,\n} from '../styles';\nimport { colorChooser } from '../../../../../utils/colorChooser';\nimport DriverBox from '../../../../UI/DriverBox';\nimport { Figure } from '../../../../UI/Figure';\n\nconst DriverStandings = ({ standings }) => {\n  let positionCounter = 0;\n  let renderDrivers = standings.map((res) => {\n    const color = colorChooser(res.team.name);\n    return (\n      <ResultItem option=\"Drivers\" key={res.id}>\n        <Figure color={color} />\n        <span>{++positionCounter}</span>\n        <Image src={res.driver.faceImgUrl} alt={res.driver.firstName} />\n        <DriverBox\n          firstName={res.driver.firstName}\n          lastName={res.driver.lastName}\n          teamName={res.team.name}\n          nationImage={res.driver.nation.imageUrl}\n        />\n        <span>{res.wins}</span>\n        <span>{res.polePositions}</span>\n        <span>{res.podiums}</span>\n        <strong>{res.points}</strong>\n      </ResultItem>\n    );\n  });\n  return (\n    <>\n      <ResultHeader>\n        <span />\n        <span>Pos</span>\n        <SpanDriver>Drivers</SpanDriver>\n        <SpanRest>Wins | Pole positions | Podiums | Pts</SpanRest>\n      </ResultHeader>\n      {renderDrivers}\n    </>\n  );\n};\n\nexport default DriverStandings;\n","import React from 'react';\nimport { ResultHeader, ResultItem, SpanRest, Team } from '../styles';\nimport { colorChooser } from '../../../../../utils/colorChooser';\nimport { Figure } from '../../../../UI/Figure';\n\nconst TeamStandings = ({ standings }) => {\n  const arrayOfTeams = [];\n  standings.forEach((res) => {\n    if (arrayOfTeams.some((x) => x.team === res.team.name)) {\n      const cp = { ...arrayOfTeams.find((x) => x.team === res.team.name) };\n      const index = arrayOfTeams.findIndex((x) => x.team === res.team.name);\n      cp.points = cp.points + res.points;\n      arrayOfTeams.splice(index, 1);\n      arrayOfTeams.push(cp);\n    } else {\n      arrayOfTeams.push({\n        team: res.team.name,\n        logo: res.team.imageUrl,\n        points: res.points,\n      });\n    }\n  });\n  let positionCounter = 0;\n  let renderTeamStandings = arrayOfTeams.map(({ team, logo, points }) => {\n    const color = colorChooser(team);\n    return (\n      <ResultItem option=\"Team\" key={team}>\n        <Figure color={color} />\n        <span>{++positionCounter}</span>\n        <Team>\n          <div>\n            <img src={logo} alt={team} />\n            <span>{team}</span>\n          </div>\n        </Team>\n        <strong>{points}</strong>\n      </ResultItem>\n    );\n  });\n  return (\n    <>\n      <ResultHeader>\n        <span />\n        <span>Pos</span>\n        <span>Team</span>\n        <SpanRest>Pts</SpanRest>\n      </ResultHeader>\n      {renderTeamStandings}\n    </>\n  );\n};\n\nexport default TeamStandings;\n","import styled from 'styled-components';\r\nexport const Centerus = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: ${({height}) => height ? height : 'auto'};\r\n`","import { useSwitchPair } from '../../../../hooks/useSwitchPair';\nimport { useSelector } from 'react-redux';\nimport { useQuery } from 'react-query';\nimport { getStandingsOfSeason } from '../../../../queries/queries';\nimport Error from '../../../NotifyErrors/Error';\nimport DriverStandings from './DriverStandings/DriverStandings';\nimport TeamStandings from './TeamStandings/TeamStandings';\nimport { NavContainer } from './styles';\nimport { CircularProgress } from '@material-ui/core';\nimport { Centerus } from '../../../UI/Centerus';\n\nconst Standings = () => {\n  const currentID = useSelector((state) => state.catData.currentSeasonId);\n  const [tab, tabsJSX] = useSwitchPair();\n  const { data, error, isLoading } = useQuery(\n    ['getStandings', currentID],\n    getStandingsOfSeason,\n    {\n      retry: 1,\n      staleTime: Infinity,\n    }\n  );\n  let componentResult;\n  if (isLoading) componentResult = (\n    <Centerus height='400px'>\n      <CircularProgress color=\"secondary\" />\n    </Centerus>\n  )\n  if (error) componentResult = <Error type=\"no-results\" />;\n  if (tab && data) {\n    componentResult = <DriverStandings standings={data} />;\n  } else if (data) {\n    componentResult = <TeamStandings standings={data} />;\n  }\n  return (\n    <>\n      <NavContainer>\n        {tabsJSX('Drivers', 'Teams', 'secondary', null)}\n      </NavContainer>\n      <div>{componentResult}</div>\n    </>\n  );\n};\n\nexport default Standings;\n","import { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport CategoryDetailsHeader from '../CategoryDetailsHeader/CategoryDetailsHeader';\nimport GrandPrixList from '../GrandPrixList/GrandPrixList';\nimport Standings from '../Standings/Standings';\nimport { useSwitchPair } from '../../../../hooks/useSwitchPair';\n\nconst CategoryDetails = () => {\n  const { catId } = useParams();\n  const [pickedCategory, setPickedCategory] = useState(null);\n  const [tab, tabsJSX] = useSwitchPair();\n  const categories = useSelector((state) => state.catData.categories);\n\n  useEffect(() => {\n    if (categories) {\n      const findedCategory = categories.find(\n        (cat) => cat.id === parseInt(catId)\n      );\n      setPickedCategory(findedCategory);\n    }\n  }, [catId, categories]);\n\n  if (pickedCategory) {\n    return (\n      <>\n        <CategoryDetailsHeader\n          pickedCategory={pickedCategory}\n          tabsJSX={tabsJSX}\n        />\n        {tab ? <GrandPrixList /> : <Standings />}\n      </>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default CategoryDetails;\n","import styled from 'styled-components';\nexport const NavigationBox = styled.nav`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 120px;\n  background-color: ${({ theme }) => theme.secondaryColor};\n`;\nexport const Wrapper = styled.div`\n  display: flex;\n`;\nexport const NavigationHeader = styled.header`\n  padding: 20px 20px 0 20px;\n  display: grid;\n  grid-template-columns: 40px 1fr;\n  grid-template-rows: 1fr 1fr;\n  align-items: center;\n  grid-gap: 0 20px;\n  & > div {\n    display: flex;\n    justify-content: center;\n    grid-column: 1/2;\n    grid-row: 1/3;\n  }\n  & > div img {\n    width: 30px;\n  }\n  & > p {\n    text-transform: uppercase;\n    font-weight: 400;\n  }\n`;\nexport const HeaderSpan = styled.span`\n  font-size: 11px;\n  color: gray;\n  grid-column: 2/3;\n  grid-row: 2/3;\n`;\n\nexport const InfoContainer = styled.section`\n  margin-top: 10px;\n  & > p {\n    padding: 10px 10px 10px;\n    background-color: ${({ theme }) => theme.secondaryColor};\n    text-transform: uppercase;\n  }\n`;\nexport const ListContainer = styled.div`\n  padding: 10px;\n  & > div {\n    font-size: 0.8em;\n    padding: 10px 0;\n    display: flex;\n    justify-content: space-between;\n  }\n`;\nexport const CircuitImage = styled.img`\n  width: 100%;\n  object-fit: contain;\n`;\n","import { HeaderSpan, NavigationHeader } from '../styles';\n\nconst BasicGpInfo = ({ gpData }) => {\n  if (gpData != null) {\n    const { circuit, name } = gpData;\n    return (\n      <NavigationHeader>\n        <div>\n          <img src={circuit.nation.imageUrl} alt={name} />\n        </div>\n        <p>{name}</p>\n        <HeaderSpan>{circuit.name}</HeaderSpan>\n      </NavigationHeader>\n    );\n  } else {\n    return <p>No results</p>;\n  }\n};\n\nexport default BasicGpInfo;\n","export function gridChooser(types) {\n  if (types) {\n    if (types.catType === 'formula-1' || types.catType === 'formula-2' || types.catType === 'formula-e') {\n      if (types.evType.charAt(0) === 'P' || types.evType.charAt(0) === 'Q') {\n        return '20px 20px 2fr repeat(2,1fr)';\n      } else if (\n        types.evType.charAt(0) === 'R' ||\n        types.evType.charAt(0) === 'F' ||\n        types.evType.charAt(0) === 'S'\n      ) {\n        return '20px 20px 4fr repeat(4,1fr) 2fr';\n      } else {\n        return 'auto';\n      }\n    }\n    if (types.catType === 'wrc') {\n      return '20px 20px 4fr 1fr 1fr';\n    }\n  }\n  return 'auto';\n}\n","import styled from 'styled-components';\nimport { gridChooser } from '../../../../utils/gridChooser';\n\nexport const Wrapper = styled.div`\n  margin-top: 10px;\n\n  & > p {\n    padding: 10px 0;\n    font-size: 13px;\n  }\n`;\n\nexport const Selector = styled.select`\n  min-width: 130px;\n  height: 35px;\n  background-color: ${({ theme }) => theme.body};\n  border-radius: 2px;\n  padding: 5px;\n  outline: none;\n  border: 1px solid ${({ theme }) => theme.text};\n  color: ${({ theme }) => theme.text};\n`;\nexport const ResultHeader = styled.div`\n  display: grid;\n  grid-gap: 10px;\n  grid-template-columns: ${({ evCombination }) => {\n    return gridChooser(evCombination);\n  }};\n  grid-template-rows: minmax(30px, 1fr);\n  font-size: 11px;\n  justify-items: center;\n  align-items: center;\n`;\n\nexport const ResultItem = styled.div`\n  color: ${({ theme, color }) => {\n    return color ? theme.text : 'grey';\n  }};\n  font-size: 13px;\n  display: grid;\n  grid-gap: 10px;\n  grid-template-columns: ${({ evCombination }) => {\n    return gridChooser(evCombination);\n  }};\n  grid-template-rows: minmax(30px, 1fr);\n  justify-items: center;\n  padding: 0 5px;\n  align-items: center;\n`;\n","import { useSelector } from 'react-redux';\nimport { resultHeaderChooser } from '../../../../utils/resultHeaderChooser';\nimport { colorChooser } from '../../../../utils/colorChooser';\nimport { ResultHeader, ResultItem } from './styles';\nimport { Figure } from '../../../UI/Figure';\nimport DriverBox from '../../../UI/DriverBox';\nimport { useEffect, useState } from 'react';\nimport { getRandomResults } from '../../../../queries/queries';\nimport { CircularProgress } from '@material-ui/core';\nimport { Centerus } from '../../../UI/Centerus';\n\nconst EventResultList = ({ type }) => {\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const ses_id = useSelector((state) => state.catData.currentSeasonId);\n\n  useEffect(() => {\n    async function fetchResult() {\n      setLoading(true);\n      try {\n        const getRandomData = await getRandomResults(ses_id);\n        setLoading(false);\n        setResult(getRandomData);\n      } catch {\n        setResult(null);\n        setLoading(false);\n      }\n    }\n\n    fetchResult();\n  }, [type, ses_id]);\n\n  const renderHeaders = type ? resultHeaderChooser(type) : null;\n  let positionCounter = 0;\n  const pointsArray = [25, 18, 15, 12, 10, 8, 6, 4, 2, 1];\n  let componentResult;\n\n  if (loading) {\n    componentResult = (\n      <Centerus height='400px'>\n        <CircularProgress color=\"secondary\" />\n      </Centerus>\n    );\n  }\n  if (result && !loading) {\n    componentResult = result.map((el, index) => {\n      const color = colorChooser(el.team.name);\n      let points = 0;\n      let laps;\n      if (index < 10) {\n        points = pointsArray[index];\n      }\n      if (el.statusRace) {\n        laps = el.laps;\n      } else {\n        laps = el.laps - el.grid;\n      }\n      return (\n        <ResultItem\n          evCombination={type}\n          key={el.driver.id}\n          color={el.statusRace ? 1 : 0}\n        >\n          <Figure color={color} />\n          <span>{++positionCounter}</span>\n          <DriverBox\n            firstName={el.driver.firstName}\n            lastName={el.driver.lastName}\n            nationImage={el.driver.nation.imageUrl}\n            teamName={el.team.name}\n          />\n          {type.evType.charAt(0) === 'R' ? <span>{el.grid}</span> : null}\n          {type.evType.charAt(0) === 'R' ? <span>{el.pits}</span> : null}\n          {<span>{laps}</span>}\n          {type.evType.charAt(0) === 'R' ? <strong>{points}</strong> : null}\n          {el.statusRace && el.time ? <span>{el.time}</span> : 'DNF'}\n        </ResultItem>\n      );\n    });\n  }\n  return (\n    <>\n      <ResultHeader evCombination={type}>{renderHeaders}</ResultHeader>\n      {componentResult}\n    </>\n  );\n};\n\nexport default EventResultList;\n","export const resultHeaderChooser = (type) => {\n  const letter = type.evType.charAt(0);\n  switch (letter) {\n    case 'R':\n    case 'F':\n    case 'S':\n      return (\n        <>\n          <span />\n          <span>Pos</span>\n          <span>Drivers</span>\n          <span>Grid</span>\n          <span>Pits</span>\n          <span>Laps</span>\n          <span>Pts</span>\n          <span>Time</span>\n        </>\n      );\n    case 'Q':\n    case 'P':\n      return (\n        <>\n          <span />\n          <span>Pos</span>\n          <span>Drivers</span>\n          <span>Laps</span>\n          <span>Time</span>\n        </>\n      );\n    case 'D':\n      return (\n        <>\n          <span/>\n          <span>Pos</span>\n          <span>Drivers</span>\n          <span>X</span>\n          <span>Time</span>\n        </>\n      );\n    default:\n      return null;\n  }\n};\n","import { useEffect, useState } from 'react';\nimport { Wrapper, Selector } from './styles';\nimport EventResultList from './EventResultList';\nimport { DateTime } from 'luxon';\nimport Error from '../../../NotifyErrors/Error';\n\nconst Race = ({ events, nameCategory, closedState }) => {\n  const [pickedEvent, setPickedEvent] = useState(null);\n\n  useEffect(() => {\n    setPickedEvent({\n      evType: events[0],\n      catType: nameCategory,\n    });\n  }, [events, nameCategory]);\n\n  function pickEventRace({ target }) {\n    setPickedEvent({\n      evType: target.options[target.selectedIndex].dataset.eventtype,\n      catType: nameCategory,\n    });\n  }\n  let renderOptions;\n  if(events){\n    renderOptions = events.map((el, index) => {\n      const customData = DateTime.local();\n      const date = `${customData.day} ${customData.monthLong.substr(\n        0,\n        3\n      )}, ${customData.toFormat('HH:mm')}`;\n      return (\n        <option value={el} key={index} data-eventtype={el}>\n          {el}, {date}\n        </option>\n      );\n    });\n  }\n\n\n  return (\n    <Wrapper>\n      <Selector onChange={pickEventRace}>{renderOptions}</Selector>\n      <p>(Random data)</p>\n      {closedState ? (\n        <EventResultList type={pickedEvent} />\n      ) : (\n        <Error type=\"no-results\" />\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Race;\n","import { CircuitImage, InfoContainer, ListContainer } from '../styles';\nimport { DateTime } from 'luxon';\nimport Error from '../../../NotifyErrors/Error';\n\nconst Info = ({ details, events }) => {\n  const { circuit } = details;\n  let renderSchedule = <Error type=\"no-results\" />;\n  if (events) {\n    renderSchedule = events.map((el, index) => {\n      const customData = DateTime.local();\n      const date = `${customData.day} ${customData.monthLong.substr(\n        0,\n        3\n      )}, ${customData.toFormat('HH:mm')}`;\n      return (\n        <div key={index}>\n          <span>{el}</span>\n          <span>{date}</span>\n        </div>\n      );\n    });\n  }\n  return (\n    <InfoContainer>\n      <p>Schedule</p>\n      <ListContainer>{renderSchedule}</ListContainer>\n      <div>\n        <CircuitImage src={circuit.circuitImageUrl} alt={circuit.name} />\n      </div>\n      <ListContainer>\n        <div>\n          <span>City</span>\n          <span>{circuit.name}</span>\n        </div>\n        <div>\n          <span>Laps</span>\n          <span>{circuit.laps}</span>\n        </div>\n        <div>\n          <span>Circuit Length</span>\n          <span>{circuit.circuitLength} km</span>\n        </div>\n        <div>\n          <span>Race Distance</span>\n          <span>{circuit.raceDistance} km</span>\n        </div>\n      </ListContainer>\n    </InfoContainer>\n  );\n};\n\nexport default Info;\n","import { useParams } from 'react-router-dom';\nimport { useSwitchPair } from '../../../hooks/useSwitchPair';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavigationBox, Wrapper } from './styles';\nimport BasicGpInfo from './Info/BasicGpInfo';\nimport Race from './Race/Race';\nimport Info from './Info/Info';\nimport { categoryEvents } from '../../../utils/categoryEvents';\n\nconst GrandPrixDetails = () => {\n  const { gpId, catName } = useParams();\n  const [gpData, setGpData] = useState(null);\n  const [events, setEvents] = useState([]);\n  const [tab, tabsJSX] = useSwitchPair();\n  const allGps = useSelector((state) => state.catData.grandPrixesOfSeason);\n\n  useEffect(() => {\n    if (allGps != null) {\n      const findedGp = allGps.find((gp) => gp.id === parseInt(gpId));\n      setEvents(categoryEvents(catName));\n      setGpData(findedGp);\n    }\n  }, [catName, allGps, gpId]);\n\n  let componentResult;\n  if (tab && gpData) {\n    componentResult = (\n      <Race\n        events={events}\n        nameCategory={catName}\n        closedState={gpData.closedState}\n      />\n    );\n  } else if (gpData) {\n    componentResult = <Info details={gpData} events={events} />;\n  }\n\n  return (\n    <section>\n      <NavigationBox>\n        <BasicGpInfo gpData={gpData} />\n        <Wrapper>{tabsJSX('Race', 'Info', 'secondary', null)}</Wrapper>\n      </NavigationBox>\n      {componentResult}\n    </section>\n  );\n};\n\nexport default GrandPrixDetails;\n","export function categoryEvents(categoryName) {\n  switch (categoryName) {\n    case 'formula-1':\n      return [\n        'Practice 1',\n        'Practice 2',\n        'Practice 3',\n        'Qualification 1',\n        'Qualification 2',\n        'Qualification 3',\n        'Race',\n      ];\n    case 'wrc':\n      return ['Day 1', 'Day 2', 'Day 3', 'Day 4'];\n    case 'motogp':\n      return [\n        'Practice 1',\n        'Practice 2',\n        'Practice 3',\n        'Practice 4',\n        'Qualification',\n        'Race',\n      ];\n    case 'formula-e':\n      return ['Practice 1', 'Practice 2', 'Qualification', 'Race'];\n    case 'formula-2':\n      return ['Practice','Qualification','Race Feature','Race Sprint']\n    default:\n      return null;\n  }\n}\n","import { Separator } from '../components/UI/Separator';\r\nimport CategoryList from '../components/Sections/LeftSection/CategoryList';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Error from '../components/NotifyErrors/Error';\r\nimport CategoryDetails from '../components/Sections/CenterSection/CategoryDetails/CategoryDetails';\r\nimport GrandPrixDetails from '../components/Sections/RightSection/GrandPrixDetails';\r\n\r\nconst AppContent = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/net-error\">\r\n        <Error type=\"network-error\" />\r\n      </Route>\r\n      <Route path=\"/\">\r\n        <CategoryList />\r\n        <Separator />\r\n        <section>\r\n          <Route path=\"/category/:catName/:catId\">\r\n            <CategoryDetails />\r\n          </Route>\r\n        </section>\r\n        <Separator />\r\n        <section>\r\n          <Route path=\"/category/:catName/:catId/gp/:gpId\">\r\n            <GrandPrixDetails />\r\n          </Route>\r\n        </section>\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default AppContent;\r\n","export const lightTheme = {\r\n  body: 'hsl(210, 13%, 88%)',\r\n  text: 'hsl(0,0%,0%)',\r\n  background: 'hsl(0,0%,100%)',\r\n  secondaryColor: 'hsl(225, 37%, 95%)',\r\n  hoverColor: 'hsla(0,0%,0%,0.4)',\r\n  borderus: 'hsl(208,100%,32%)',\r\n};\r\nexport const darkTheme = {\r\n  body: 'hsl(214,30%,14%)',\r\n  text: 'hsl(0,0%,98%)',\r\n  background: 'hsl(0,100%,0%)',\r\n  secondaryColor: 'hsl(0,0%,21%)',\r\n  hoverColor: 'hsl(0,1%,22%)',\r\n  borderus: 'hsl(208,51%,46%)',\r\n};\r\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n    body {\n        background: ${({ theme }) => theme.body};\n        color: ${({ theme }) => theme.text};\n        font-family: 'PT Sans', sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        transition: all 0.50s linear;\n    }\n    code {\n        font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n        monospace;\n    }\n`;\n","import { Switch } from '@material-ui/core';\nimport { Centerus } from './Centerus';\n\nconst Toggle = ({ theme, toggleTheme }) => {\n  return (\n    <Centerus>\n      <span>Light</span>\n      <Switch\n        checked={theme !== 'light'}\n        onChange={toggleTheme}\n        color=\"primary\"\n        name=\"checkedB\"\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n      />\n      <span>Dark</span>\n    </Centerus>\n  );\n};\n\nexport default Toggle;\n","import { useDarkMode } from '../../hooks/useDarkMode';\r\nimport { darkTheme, lightTheme } from '../../themes/themes';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { GlobalStyles } from '../../globalStyles';\r\nimport Toggle from './Toggler';\r\n\r\nconst Theme = ({ children }) => {\r\n  const [theme, themeToggler, mountedComponent] = useDarkMode();\r\n  if (!mountedComponent) return <div />;\r\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\r\n  return (\r\n    <ThemeProvider theme={themeMode}>\r\n      <GlobalStyles />\r\n      <Toggle theme={theme} toggleTheme={themeToggler} />\r\n      {children}\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Theme;\r\n","import { useEffect, useState } from 'react';\n\nexport const useDarkMode = () => {\n  const [theme, setTheme] = useState('light');\n  const [mountedComponent, setMountedComponent] = useState(false);\n  const setMode = (mode) => {\n    window.localStorage.setItem('theme', mode);\n    setTheme(mode);\n  };\n  const themeToggler = () => {\n    theme === 'light' ? setMode('dark') : setMode('light');\n  };\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem('theme');\n    localTheme && setTheme(localTheme);\n    setMountedComponent(true);\n  }, []);\n  return [theme, themeToggler, mountedComponent];\n};\n","import Layout from './hoc/Layout';\r\nimport AppContent from './hoc/AppContent';\r\nimport Theme from './components/UI/Theme';\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport React from 'react';\r\nimport { ReactQueryDevtools } from 'react-query/devtools';\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nconst App = () => {\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <ReactQueryDevtools initialIsOpen={false} />\r\n      <Theme>\r\n        <Layout>\r\n          <BrowserRouter>\r\n            <AppContent />\r\n          </BrowserRouter>\r\n        </Layout>\r\n      </Theme>\r\n    </QueryClientProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  STORE_CATEGORIES,\n  STORE_SEASON_ID,\n  STORE_GRANDPRIXES,\n} from './actions';\n\nconst initialState = {\n  categories: null,\n  currentSeasonId: null,\n  grandPrixesOfSeason: null,\n};\n\nfunction categoryReducer(state = initialState, action) {\n  switch (action.type) {\n    case STORE_CATEGORIES:\n      return {\n        ...state,\n        categories: action.payload.data,\n      };\n    case STORE_SEASON_ID:\n      return {\n        ...state,\n        currentSeasonId: action.payload.id,\n      };\n    case STORE_GRANDPRIXES:\n      return {\n        ...state,\n        grandPrixesOfSeason: action.payload.data,\n      };\n    default:\n      return state;\n  }\n}\n\nexport { categoryReducer };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport { categoryReducer } from './store/application-data/reducer';\n\nconst rootReducer = combineReducers({\n  catData: categoryReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware()));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}